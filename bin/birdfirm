#!/bin/bash

birdfirm_main(){
  local root
  local bin
  local lock
  local executable
  local path
  local confirm

  root=$HOME/.birdfirm
  bin=$root/bin
  lock=$bin.txt

  trap birdfirm_hungup 1
  trap birdfirm_hungup 2

  if [ -f $lock ]; then
    echo "birdfirm locked. maybe running? (lock file : $lock)"
    return
  fi

  if [ ! -d "$bin" ]; then
    echo "birdfirm bin not found : $bin"
    return
  fi

  while [ true ]; do
    birdfirm_build_hosts

    executable=$(cat $lock | peco)
    executable=${executable##* }
    if [ -z "$executable" ]; then
      birdfirm_cleanup
      return
    else
      path=$bin/$executable
      if [ -f "$path" ]; then
        $path
      fi
    fi

    read -p "birdfirm: continue? [Y/n] " -n 1 confirm
    case "$confirm" in
      N|n)
        birdfirm_cleanup
        return
        ;;
      *)
        ;;
    esac
  done
}

birdfirm_build_hosts(){
  ls -1 $bin | awk '{print "  " $1}' > $lock
  if [ "$(which tmux 2> /dev/null)" ]; then
    birdfirm_build_hosts_tmux
  fi
  if [ "$(which docker 2> /dev/null)" ]; then
    birdfirm_build_hosts_docker
  fi
}
birdfirm_build_hosts_tmux(){
  local socket
  local session
  for socket in $HOME/.tmux.wrapper/tmux-*.sock; do
    for session in $(tmux -S $socket ls -F '#S' 2> /dev/null); do
      sed "s/^  $session$/* $session/" -i $lock
    done
  done
}
birdfirm_build_hosts_docker(){
  local session
  local prefix
  prefix=_shell
  for session in $(docker ps --format "{{.Names}}"); do
    sed "s/^  $prefix.$session$/# $prefix.$session/" -i $lock
  done
}

birdfirm_hungup(){
  birdfirm_cleanup
  exit 1
}
birdfirm_cleanup(){
  rm -f $lock
}

birdfirm_main
